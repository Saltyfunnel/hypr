#!/bin/bash
# setwall.sh - Random wallpaper setter + Pywal + Waybar + Yazi + Tofi theming
set -euo pipefail

# ----------------------------
# Helper functions
# ----------------------------
print_header()    { echo -e "\n--- \e[1m\e[34m$1\e[0m ---"; }
print_success()   { echo -e "\e[32m$1\e[0m"; }
print_warning()   { echo -e "\e[33mWarning: $1\e[0m" >&2; }
print_error()     { echo -e "\e[31mError: $1\e[0m" >&2; exit 1; }

# ----------------------------
# Directories & Files
# ----------------------------
WALLPAPER_DIR="$HOME/Pictures/Wallpapers"
WAYBAR_CSS="$HOME/.config/waybar/style.css"
PYWAL_CACHE="$HOME/.cache/wal/colors.css"
YAZI_THEME="$HOME/.config/yazi/theme.toml"
TOFI_TEMPLATE="$HOME/.config/tofi/tofi.template"
TOFI_OUTPUT="$HOME/.cache/wal/tofi"

# ----------------------------
# Ensure swww-daemon is running
# ----------------------------
print_header "Checking swww-daemon"
if ! pgrep -x "swww-daemon" >/dev/null; then
    echo "Starting swww-daemon..."
    swww-daemon &
    sleep 1
else
    print_success "swww-daemon already running"
fi

# ----------------------------
# Pick random wallpaper
# ----------------------------
print_header "Selecting wallpaper"
WALLPAPER=$(find "$WALLPAPER_DIR" -type f \( -iname "*.png" -o -iname "*.jpg" \) | shuf -n 1)
[[ -n "$WALLPAPER" ]] || print_error "No wallpapers found in $WALLPAPER_DIR"

echo "Setting wallpaper: $WALLPAPER"
swww img "$WALLPAPER" --transition-type any --transition-step 90 --transition-fps 60

# ----------------------------
# Generate Pywal colors
# ----------------------------
print_header "Generating Pywal colors"
wal -n -q -i "$WALLPAPER"

# ----------------------------
# Extract Pywal colors
# ----------------------------
print_header "Extracting colors"
for i in {0..15}; do
    eval COLOR$i=$(grep "color$i" "$PYWAL_CACHE" | grep -o '#[0-9A-Fa-f]\{6\}' | head -n1)
done
BG=$COLOR0
FG=$COLOR7
print_success "Colors loaded from Pywal"

# ----------------------------
# Write Waybar CSS
# ----------------------------
print_header "Updating Waybar CSS"
mkdir -p "$(dirname "$WAYBAR_CSS")"
cat > "$WAYBAR_CSS" <<EOF
/* Waybar CSS generated by setwall.sh */
@define-color color0 ${COLOR0};
@define-color color1 ${COLOR1};
@define-color color2 ${COLOR2};
@define-color color3 ${COLOR3};
@define-color color4 ${COLOR4};
@define-color color5 ${COLOR5};
@define-color color6 ${COLOR6};
@define-color color7 ${COLOR7};
@define-color color8 ${COLOR8};
@define-color color9 ${COLOR9};
@define-color color10 ${COLOR10};
@define-color color11 ${COLOR11};
@define-color color12 ${COLOR12};
@define-color color13 ${COLOR13};
@define-color color14 ${COLOR14};
@define-color color15 ${COLOR15};

* {
    font-family: "JetBrainsMono Nerd Font";
    font-size: 13px;
    min-height: 0;
}

window#waybar {
    background-color: transparent;
    color: ${FG};
    transition: background-color 0.5s;
}

.modules-left,
.modules-center,
.modules-right {
    background-color: transparent;
    border-radius: 0;
    margin: 0;
    padding: 0;
}

#window,
#clock,
#custom-spotify,
#cpu,
#memory,
#network,
#pulseaudio,
#pulseaudio#microphone,
#custom-power,
#tray {
    background-color: ${BG};
    border-radius: 11.5px;
    margin: 2px;
    padding: 5px 8px;
}

#window { color: ${COLOR5}; }
#clock { color: ${COLOR3}; }
#custom-spotify { color: ${COLOR5}; }
#cpu { color: ${COLOR2}; }
#memory { color: ${COLOR4}; }
#network { color: ${COLOR6}; }
#pulseaudio { color: ${COLOR1}; }
#pulseaudio#microphone { color: ${COLOR9}; }
#custom-power { color: ${FG}; }
#tray { color: ${FG}; }
EOF
print_success "Waybar CSS updated at $WAYBAR_CSS"

# ----------------------------
# Update Yazi theme
# ----------------------------
print_header "Updating Yazi theme"
mkdir -p "$(dirname "$YAZI_THEME")"
cat > "$YAZI_THEME" <<EOF
[mgr]
fg = "$FG"
bg = "$BG"
border = "$COLOR2"
highlight = "$COLOR4"

[statusbar]
fg = "$FG"
bg = "$BG"

[preview]
fg = "$FG"
bg = "$BG"
EOF
print_success "Yazi theme updated at $YAZI_THEME"

# ----------------------------
# Generate Tofi theme
# ----------------------------
print_header "Updating Tofi theme"
if [[ -f "$TOFI_TEMPLATE" ]]; then
    mkdir -p "$(dirname "$TOFI_OUTPUT")"
    sed -e "s/{color0}/${BG}/g" \
        -e "s/{color4}/${COLOR4}/g" \
        -e "s/{color7}/${FG}/g" \
        -e "s/{color15}/${COLOR15}/g" \
        "$TOFI_TEMPLATE" > "$TOFI_OUTPUT"
    print_success "Tofi theme generated at $TOFI_OUTPUT"
else
    print_warning "Tofi template not found at $TOFI_TEMPLATE"
fi

# ----------------------------
# Reload Waybar
# ----------------------------
print_header "Reloading Waybar"
if pgrep -x "waybar" >/dev/null; then
    pkill -USR2 waybar
    print_success "Waybar reloaded"
else
    waybar & disown
    print_success "Waybar started"
fi

# ----------------------------
# Reload Tofi
# ----------------------------
print_header "Reloading Tofi"
if pgrep -x "tofi-drun" >/dev/null; then
    pkill -x tofi-drun
    tofi-drun -c "$TOFI_OUTPUT" --drun-launch=true & disown
    print_success "Tofi reloaded"
else
    print_success "Tofi not running — skipped reload"
fi

# ----------------------------
# Done
# ----------------------------
print_success "✅ Wallpaper, Waybar, Yazi, and Tofi themes updated!"
